using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Runtime.Serialization.Formatters.Binary;
using System.Text;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;

public partial class jSignature_master_Default : System.Web.UI.Page
{

    protected void Page_Load(object sender, EventArgs e)
    {
        if (!IsPostBack)
        {

            string aaa = "image/png;base64,";


            byte[] bytes = Convert.FromBase64String(aaa.Replace("image/png;base64,",""));
            //MemoryStream memStream = new MemoryStream(bytes);
            //BinaryFormatter binFormatter = new BinaryFormatter();
            //Image img = (Image)binFormatter.Deserialize(memStream);

            FileStream fs = new FileStream(Server.MapPath("a.png"), FileMode.Create, FileAccess.Write);
            BinaryWriter bw = new BinaryWriter(fs);
            bw.Write(bytes);
            bw.Close();
            fs.Close();
            //Response.Write(path);
        
        }
    }
    /// <summary>
    /// 将图片数据转换为Base64字符串
    /// </summary>
    /// <param name="sender"></param>
    /// <param name="e"></param>
    private void ToBase64(object sender, EventArgs e)
    {
        //Image img = this.pictureBox.Image;
        //BinaryFormatter binFormatter = new BinaryFormatter();
        //MemoryStream memStream = new MemoryStream();
        //binFormatter.Serialize(memStream, img);
        //byte[] bytes = memStream.GetBuffer();
        //string base64 = Convert.ToBase64String(bytes);
        //this.richTextBox.Text = base64;
    }

    /// <summary>
    /// 将Base64字符串转换为图片
    /// </summary>
    /// <param name="sender"></param>
    /// <param name="e"></param>
    private void ToImage(object sender, EventArgs e)
    {
 
    }

   
}